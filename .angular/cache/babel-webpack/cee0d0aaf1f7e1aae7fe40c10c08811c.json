{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nexport class BaseResourceService {\n  constructor(apiPath, http) {\n    this.apiPath = apiPath;\n    this.http = http;\n  }\n\n  getAll() {\n    return this.http.get(this.apiPath).pipe(catchError(this.handleError), map(this.jsonDataToCategories));\n  }\n\n  getById(id) {\n    const url = `${this.apiPath}/${id}`;\n    return this.http.get(url).pipe(catchError(this.handleError), map(this.jsonDataToResource));\n  }\n\n  created(resource) {\n    return this.http.post(this.apiPath, resource).pipe(catchError(this.handleError), map(this.jsonDataToResource));\n  }\n\n  update(resource) {\n    const url = `${this.apiPath}/${resource.id}`;\n    return this.http.put(url, resource).pipe(catchError(this.handleError), map(this.jsonDataToResource));\n  }\n\n  delete(id) {\n    const url = `${this.apiPath}/${id}`;\n    return this.http.delete(url).pipe(catchError(this.handleError), map(() => null));\n  }\n\n  jsonDataToCategories(jsonData) {\n    const categories = [];\n    jsonData.forEach(element => categories.push(element));\n    return categories;\n  }\n\n  jsonDataToResource(jsonData) {\n    const categories = [];\n    return jsonData;\n  }\n\n  handleError(error) {\n    console.log(\"Erro na requisicao =>\", error);\n    return throwError(error);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}