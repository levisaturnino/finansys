{"ast":null,"code":"import { Entry } from './entry.model';\nimport { flatMap } from 'rxjs/operators';\nimport { API } from '../../../api-url-router';\nimport { BaseResourceService } from '../../../shared/services/base-resource-services';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../categories/shared/CategoryService\";\nexport let EntryService = /*#__PURE__*/(() => {\n  class EntryService extends BaseResourceService {\n    constructor(injector, categoryService) {\n      super(`${API.address}/entries`, injector);\n      this.injector = injector;\n      this.categoryService = categoryService;\n    }\n\n    created(entry) {\n      return this.categoryService.getById(entry === null || entry === void 0 ? void 0 : entry.categoryId).pipe(flatMap(category => {\n        entry.category = category;\n        return super.created(entry);\n      }));\n    }\n\n    update(entry) {\n      return this.categoryService.getById(entry === null || entry === void 0 ? void 0 : entry.categoryId).pipe(flatMap(category => {\n        entry.category = category;\n        return super.update(entry);\n      }));\n    }\n\n    jsonDataToResources(jsonData) {\n      const entries = [];\n      jsonData.forEach(element => {\n        const entry = Entry.fromJson(element);\n        entries.push(entry);\n      });\n      return entries;\n    }\n\n    jsonDataToResource(jsonData) {\n      const entries = [];\n      return Entry.fromJson(jsonData);\n    }\n\n  }\n\n  EntryService.ɵfac = function EntryService_Factory(t) {\n    return new (t || EntryService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i1.CategoryService));\n  };\n\n  EntryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EntryService,\n    factory: EntryService.ɵfac,\n    providedIn: 'root'\n  });\n  return EntryService;\n})();","map":null,"metadata":{},"sourceType":"module"}