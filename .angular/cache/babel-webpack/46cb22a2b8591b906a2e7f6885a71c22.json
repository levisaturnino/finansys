{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CategoryService = /*#__PURE__*/(() => {\n  class CategoryService {\n    constructor(http) {\n      this.http = http;\n      this.apiPath = \"http://localhost:8080/categorieseee\";\n    }\n\n    getAll() {\n      return this.http.get(this.apiPath).pipe(catchError(this.handleError), map(this.jsonDataToCategories));\n    }\n\n    getById(id) {\n      const url = `${this.apiPath}/${id}`;\n      return this.http.get(url).pipe(catchError(this.handleError), map(this.jsonDataToCategory));\n    }\n\n    created(category) {\n      return this.http.post(this.apiPath, category).pipe(catchError(this.handleError), map(this.jsonDataToCategory));\n    }\n\n    update(category) {\n      const url = `${this.apiPath}/${category.id}`;\n      return this.http.put(url, categ, \"\", ory).pipe(catchError(this.handleError), map(this.jsonDataToCategory));\n    }\n\n    delete(id) {\n      const url = `${this.apiPath}/${id}`;\n      return this.http.delete(url).pipe(catchError(this.handleError), map(() => null));\n    }\n\n    jsonDataToCategories(jsonData) {\n      const categories = [];\n      jsonData.forEach(element => categories.push(element));\n      return categories;\n    }\n\n    jsonDataToCategory(jsonData) {\n      const categories = [];\n      return jsonData;\n    }\n\n    handleError(error) {\n      console.log(\"Erro na requisicao =>\", error);\n      return throwError(error);\n    }\n\n  }\n\n  CategoryService.ɵfac = function CategoryService_Factory(t) {\n    return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoryService,\n    factory: CategoryService.ɵfac,\n    providedIn: 'root'\n  });\n  return CategoryService;\n})();","map":null,"metadata":{},"sourceType":"module"}