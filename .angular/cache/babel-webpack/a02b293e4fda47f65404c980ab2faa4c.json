{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { map, catchError } from \"rxjs/operators\";\nexport class BaseResourceService {\n  constructor(apiPath, injector, jsonDataToResourceFn) {\n    this.apiPath = apiPath;\n    this.injector = injector;\n    this.jsonDataToResourceFn = jsonDataToResourceFn;\n    this.http = injector.get(HttpClient);\n  }\n\n  getAll() {\n    return this.http.get(this.apiPath).pipe(map(n => this.jsonDataToResources), catchError(this.handleError));\n  }\n\n  getById(id) {\n    const url = `${this.apiPath}/${id}`;\n    return this.http.get(url).pipe(map(this.jsonDataToResource.bind(this)), catchError(this.handleError));\n  }\n\n  created(resource) {\n    return this.http.post(this.apiPath, resource).pipe(map(this.jsonDataToResource.bind(this)), catchError(this.handleError));\n  }\n\n  update(resource) {\n    const url = `${this.apiPath}/${resource.id}`;\n    return this.http.put(url, resource).pipe(map(() => resource), catchError(this.handleError));\n  }\n\n  delete(id) {\n    const url = `${this.apiPath}/${id}`;\n    return this.http.delete(url).pipe(map(() => null), catchError(this.handleError));\n  } // PROTECTED METHODS\n\n\n  jsonDataToResources(jsonData) {\n    const resources = [];\n    jsonData.forEach(element => resources.push(this.jsonDataToResourceFn(element)));\n    return resources;\n  }\n\n  jsonDataToResource(jsonData) {\n    return this.jsonDataToResourceFn(jsonData);\n  }\n\n  handleError(error) {\n    console.log(\"ERRO NA REQUISIÇÃO => \", error);\n    return throwError(error);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}