{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EntryService = /*#__PURE__*/(() => {\n  class EntryService {\n    constructor(http) {\n      this.http = http;\n      this.apiPath = \"${API.}/entries\";\n    }\n\n    getAll() {\n      return this.http.get(this.apiPath).pipe(catchError(this.handleError), map(this.jsonDataToEntries));\n    }\n\n    getById(id) {\n      const url = `${this.apiPath}/${id}`;\n      return this.http.get(url).pipe(catchError(this.handleError), map(this.jsonDataToEntry));\n    }\n\n    created(entry) {\n      return this.http.post(this.apiPath, entry).pipe(catchError(this.handleError), map(this.jsonDataToEntry));\n    }\n\n    update(entry) {\n      const url = `${this.apiPath}/${entry.id}`;\n      return this.http.put(url, entry).pipe(catchError(this.handleError), map(this.jsonDataToEntry));\n    }\n\n    delete(id) {\n      const url = `${this.apiPath}/${id}`;\n      return this.http.delete(url).pipe(catchError(this.handleError), map(() => null));\n    }\n\n    jsonDataToEntries(jsonData) {\n      const entries = [];\n      jsonData.forEach(element => entries.push(element));\n      return entries;\n    }\n\n    jsonDataToEntry(jsonData) {\n      const entries = [];\n      return jsonData;\n    }\n\n    handleError(error) {\n      console.log(\"Erro na requisicao =>\", error);\n      return throwError(error);\n    }\n\n  }\n\n  EntryService.ɵfac = function EntryService_Factory(t) {\n    return new (t || EntryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  EntryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EntryService,\n    factory: EntryService.ɵfac,\n    providedIn: 'root'\n  });\n  return EntryService;\n})();","map":null,"metadata":{},"sourceType":"module"}