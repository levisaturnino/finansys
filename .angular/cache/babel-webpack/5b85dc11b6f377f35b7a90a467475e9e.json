{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Category } from \"../shared/category.model\";\nimport { switchMap } from 'rxjs/operators';\nlet CategoryFormComponent = class CategoryFormComponent {\n  constructor(toastr, categoryService, route, router, formBuilder) {\n    this.toastr = toastr;\n    this.categoryService = categoryService;\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.currentAction = \"\";\n    this.pageTitle = \"\";\n    this.serverErrorMessage = [];\n    this.submittingForm = false;\n    this.category = new Category();\n  }\n\n  ngAfterContentChecked() {\n    this.setPageTitle();\n  }\n\n  setPageTitle() {\n    if (this.currentAction == \"new\") {\n      this.pageTitle = \"Cadastro de Nova Categoria\";\n    } else {\n      const categoryName = this.category.name || \"\";\n      this.pageTitle = \"Editando Categoria: \" + this.category.name;\n    }\n  }\n\n  ngOnInit() {\n    this.setCurrentAction();\n    this.setBuildCategoryForm();\n    this.loadCategory();\n  }\n\n  setBuildCategoryForm() {\n    this.categoryForm = this.formBuilder.group({\n      id: [null],\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      description: [null]\n    });\n  }\n\n  setCurrentAction() {\n    if (this.route.snapshot.url[0].path == \"new\") {\n      this.currentAction = \"new\";\n    } else {\n      this.currentAction = \"edit\";\n    }\n  }\n\n  loadCategory() {\n    if (this.currentAction == \"edit\") {\n      this.route.paramMap.pipe(switchMap(parameter => this.categoryService.getById(+parameter.get(\"id\")))).subscribe(category => {\n        var _a;\n\n        this.category = category;\n        (_a = this.categoryForm) === null || _a === void 0 ? void 0 : _a.patchValue(category);\n      }, error => alert(\"Ocorreu um erro no servidor, tente mais tarde\"));\n    }\n  }\n\n  createCategory() {\n    const category = Object.assign(new Category(), this.categoryForm.value);\n    this.categoryService.created(category).subscribe(category => this.actionsForSuccess(category), error => this.actionsForError(error));\n  }\n\n  updateCategory() {\n    const category = Object.assign(new Category(), this.categoryForm.value);\n    this.categoryService.update(category).subscribe(category => this.actionsForSuccess(category), error => this.actionsForError(error));\n  }\n\n  actionsForSuccess(category) {\n    this.toastr.success(\"Solicitação processada com sucesso!\"); // redirect/reload component page\n\n    this.router.navigateByUrl(\"categories\", {\n      skipLocationChange: true\n    }).then(() => this.router.navigate(['categories', category.id, \"edit\"]));\n  }\n\n  actionsForError(error) {\n    this.toastr.error(\"Ocorreu um erro ao processar a sua solicitação!\");\n    this.submittingForm = false;\n\n    if (error.status === 422) {\n      this.serverErrorMessage = JSON.parse(error._body).errord;\n    } else {\n      this.serverErrorMessage = [\"Falha na comunicação com o servidor. Por Favor, teste mais tarde.\"];\n    }\n\n    console.log(this.serverErrorMessage);\n  }\n\n  submitForm() {\n    this.submittingForm = true;\n\n    if (this.currentAction == \"new\") {\n      this.createCategory();\n    } else {\n      this.updateCategory();\n    }\n  }\n\n};\nCategoryFormComponent = __decorate([Component({\n  selector: 'app-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: ['./category-form.component.css']\n})], CategoryFormComponent);\nexport { CategoryFormComponent };","map":null,"metadata":{},"sourceType":"module"}