{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Entry } from './entry.model';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { map, catchError, flatMap } from 'rxjs/operators';\nimport { API } from '../../../api-url-router';\nlet EntryService = class EntryService {\n  constructor(http, categoryService) {\n    this.http = http;\n    this.categoryService = categoryService;\n    this.apiPath = `${API.address}/entries`;\n  }\n\n  getAll() {\n    return this.http.get(this.apiPath).pipe(catchError(this.handleError), map(this.jsonDataToEntries));\n  }\n\n  getById(id) {\n    const url = `${this.apiPath}/${id}`;\n    return this.http.get(url).pipe(catchError(this.handleError), map(this.jsonDataToEntry));\n  }\n\n  created(entry) {\n    return this.categoryService.getById(entry === null || entry === void 0 ? void 0 : entry.categoryId).pipe(flatMap(category => {\n      entry.category = category;\n      return this.http.post(this.apiPath, entry).pipe(catchError(this.handleError), map(this.jsonDataToEntry));\n    }));\n  }\n\n  update(entry) {\n    const url = `${this.apiPath}/${entry.id}`;\n    return this.categoryService.getById(entry === null || entry === void 0 ? void 0 : entry.categoryId).pipe(flatMap(category => {\n      entry.category = category;\n      return this.http.put(url, entry).pipe(catchError(this.handleError), map(this.jsonDataToEntry));\n    }));\n  }\n\n  delete(id) {\n    const url = `${this.apiPath}/${id}`;\n    return this.http.delete(url).pipe(catchError(this.handleError), map(() => null));\n  }\n\n  jsonDataToEntries(jsonData) {\n    const entries = [];\n    jsonData.forEach(element => {\n      const entry = Object.assign(new Entry(), element);\n      entries.push(entry);\n    });\n    return entries;\n  }\n\n  jsonDataToEntry(jsonData) {\n    const entries = [];\n    return Object.assign(new Entry(), jsonData);\n  }\n\n  handleError(error) {\n    console.log(\"Erro na requisicao =>\", error);\n    return throwError(error);\n  }\n\n};\nEntryService = __decorate([Injectable({\n  providedIn: 'root'\n})], EntryService);\nexport { EntryService };","map":null,"metadata":{},"sourceType":"module"}